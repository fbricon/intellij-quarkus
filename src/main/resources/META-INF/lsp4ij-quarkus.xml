<idea-plugin>

  <extensions defaultExtensionNs="com.redhat.devtools.intellij.quarkus">
    <!-- Quarkus LSP -->
    <server id="quarkus"
            label="Tools for MicroProfile"
            class="com.redhat.devtools.intellij.quarkus.lsp.QuarkusServer"
            clientImpl="com.redhat.devtools.intellij.quarkus.lsp.QuarkusLanguageClient"
            serverInterface="org.eclipse.lsp4mp.ls.api.MicroProfileLanguageServerAPI"
            scope="project">
      <description><![CDATA[
        The <a href="https://github.com/eclipse/lsp4mp">MicroProfile language server</a> provides <a href="https://microprofile.io/">MicroProfile</a> support in:
        <ul>
          <li><b>Java</b> files.</li>
          <li>and <b>microprofile-config.properties</b> files.</li>
        </ul>
        This language server is extended with <a href="https://github.com/redhat-developer/quarkus-ls" >Quarkus extension</a> to provide <a href="https://quarkus.io/">Quarkus</a> support in <b>application.properties</b> file.
        ]]>
      </description>
    </server>
    <languageMapping language="Properties" serverId="quarkus"/>
    <languageMapping language="JAVA" serverId="quarkus"/>
    <serverIconProvider serverId="quarkus" class="com.redhat.devtools.intellij.microprofile.lang.MicroProfileServerIconProvider" />
  </extensions>

  <extensions defaultExtensionNs="com.intellij">
    <!-- MicroProfile settings -->
    <projectConfigurable groupId="language"
                             id="MicroProfile"
                             bundle="messages.MicroProfileBundle"
                             key="microprofile"
                             instance="com.redhat.devtools.intellij.lsp4mp4ij.settings.MicroProfileConfigurable"/>
    <projectConfigurable parentId="MicroProfile"
                             id="MicroProfileProperties"
                             bundle="messages.MicroProfileBundle"
                             key="microprofile.properties"
                             instance="com.redhat.devtools.intellij.lsp4mp4ij.settings.properties.MicroProfilePropertiesConfigurable"/>
    <projectConfigurable parentId="MicroProfile"
                             bundle="messages.MicroProfileBundle"
                             key="microprofile.java"
                             id="MicroProfileJava"
                             instance="com.redhat.devtools.intellij.lsp4mp4ij.settings.java.MicroProfileJavaConfigurable"/>

    <projectService id="com.redhat.devtools.intellij.lsp4mp4ij.settings.UserDefinedMicroProfileSettings"
                        serviceImplementation="com.redhat.devtools.intellij.lsp4mp4ij.settings.UserDefinedMicroProfileSettings"/>

    <implicitUsageProvider implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.core.JavaEEImplicitUsageProvider"/>
    <implicitUsageProvider implementation="com.redhat.devtools.intellij.quarkus.psi.internal.QuarkusBuildImplicitUsageProvider"/>
    <!-- Quarkus -->
    <lang.documentationProvider id="LSPTextHoverProperties" language="Properties" implementationClass="com.redhat.devtools.intellij.lsp4ij.operations.hover.LSPTextHover" order="first"/>
    <externalAnnotator language="Properties"
                       implementationClass="com.redhat.devtools.intellij.lsp4ij.operations.diagnostics.LSPDiagnosticAnnotator"/>
    <lang.documentationProvider id="LSPTextHoverJAVA" language="JAVA" implementationClass="com.redhat.devtools.intellij.lsp4ij.operations.hover.LSPTextHover" order="first"/>
    <codeInsight.inlayProvider language="JAVA" implementationClass="com.redhat.devtools.intellij.lsp4ij.operations.codelens.LSPCodelensInlayProvider"/>
    <externalAnnotator language="JAVA"
                       implementationClass="com.redhat.devtools.intellij.lsp4ij.operations.diagnostics.LSPDiagnosticAnnotator"/>
    <externalAnnotator language="JAVA"
                       implementationClass="com.redhat.devtools.intellij.lsp4ij.operations.documentLink.LSPDocumentLinkAnnotator"/>
    <codeInsight.inlayProvider language="Properties"
                               implementationClass="com.redhat.devtools.intellij.lsp4ij.operations.inlayhint.LSPInlayHintInlayProvider"/>
  </extensions>

</idea-plugin>
